generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PINXSB_POSTGRES_PRISMA_URL")  // Use pooled connection for most queries
  directUrl = env("PINXSB_POSTGRES_URL_NON_POOLING")  // Use non-pooled connection for specific scenarios
}

model User {
  id            String         @id @default(cuid())
  user_id       String         @unique
  username      String?
  first_name    String?
  coins         Int            @default(0)
  createdAt     DateTime       @default(now())
  referredBy    User?          @relation("UserReferrals", fields: [referredById], references: [user_id])
  referredById  String?
  referredUsers User[]         @relation("UserReferrals")  // This is the opposite relation field
  miningSessions MiningSession[]
  referrals     Referral[]     @relation("UserReferralStats")
  tasks         Task[]
  dailyLogins   DailyLogin[]
}

model Referral {
  id            String   @id @default(cuid())
  user          User     @relation("UserReferralStats", fields: [user_id], references: [user_id])
  user_id       String
  referralCount Int      @default(0)
  referralCoins Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model MiningSession {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [user_id], references: [user_id])
  user_id       String
  countdownEnd DateTime?
  stonesMined  Float    @default(0.0)
  canSell      Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Task {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [user_id], references: [user_id])
  user_id      String
  description String
  isComplete  Boolean  @default(false)
  rewardCoins Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DailyLogin {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [user_id], references: [user_id])
  user_id       String
  currentStreak Int     @default(0)
  lastClaim    DateTime?
  nextClaimDue DateTime
  streakReward Int     @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
