generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PINK_PRISMA_URL")
  directUrl = env("PINK_URL_NON_POOLING")
}

model User {
  id         String   @id @default(cuid())
  telegramUid String   @unique           // Telegram UID (fixed, won't change)
  username   String?                      // Username (optional)
  firstName  String?                      // Firstname (optional)
  earnedCoins Int    @default(0)          // Total coins earned
  createdAt  DateTime @default(now())
  miningSessions   MiningSession[]  // Reverse relation for mining sessions
  referrals        Referral[]       // Reverse relation for referrals
  tasks            Task[]           // Reverse relation for tasks
}

model MiningSession {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  startTime   DateTime                // When mining started
  countdown   Int      @default(28800) // Countdown in seconds (8 hours)
  status      String   @default("ongoing") // "ongoing" or "complete"
  sellEnabled Boolean  @default(false) // Whether the user can sell mined items
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Referral {
  id          String   @id @default(cuid())
  referrer    User     @relation(fields: [referrerId], references: [id])  // The user who made the referral
  referrerId  String
  referredUid String                                      // Telegram UID of the referred user
  createdAt   DateTime @default(now())
}

model Task {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  taskName    String                         // Task description
  completedAt DateTime?                      // When the task was completed
  rewardCoins Int        @default(0)          // Reward coins for completing the task
  isDailyLogin Boolean   @default(false)      // Whether this is a daily login task
  dailyStreak  Int       @default(0)          // Streak count for daily login rewards
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
