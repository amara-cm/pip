generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PINK_PRISMA_URL") 
  directUrl = env("PINK_URL_NON_POOLING")
}

model User {
  id       String   @id @default(cuid())
  user_id  String   @unique
  username String?
  first_name String?
  earned_coins Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gameSessions   GameSession[]    // Reverse relation for GameSession
  gameHistory    GameHistory[]    // Reverse relation for GameHistory
  referrals      Referral[]       // Reverse relation for Referral
  miningSessions MiningSession[]  // Reverse relation for MiningSession
}

model GameSession {
  id            String   @id @default(cuid())
  user          User     @relation(fields: [userId], references: [id])
  user_id        String
  claimStreak   Int      @default(0)
  lastClaimedAt DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model GameHistory {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  user_id    String
  action    String
  timestamp DateTime @default(now())
}

model Referral {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  user_id     String
  referredId String
  createdAt  DateTime @default(now())
}

model MiningSession {
  id         String   @id @default(cuid())
  user_id     String
  user       User     @relation(fields: [userId], references: [id])
  startTime  DateTime
  duration   Int      @default(28800)
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
